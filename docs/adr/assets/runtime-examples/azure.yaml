apiVersion: infrastructuremanager.kyma-project.io/v1alpha1
kind: Runtime
metadata:
  labels:
    kyma-project.io/instance-id: instance-id
    kyma-project.io/runtime-id: runtime-id
    kyma-project.io/broker-plan-id: plan-id
    kyma-project.io/broker-plan-name: plan-name
    kyma-project.io/global-account-id: global-account-id
    kyma-project.io/subaccount-id: subAccount-id
    kyma-project.io/shoot-name: shoot-name
    kyma-project.io/region: region
    kyma-project.io/platform-region: platform-region
    operator.kyma-project.io/kyma-name: kymaName
  name: runtime-id
  namespace: kcp-system
spec:
  shoot:
    # spec.shoot.name is required
    name: shoot-name
    # spec.shoot.purpose is required
    purpose: production
    # spec.shoot.seedName is optional, default=nil
    seedName: az-ha-us2
    # spec.shoot.region is required
    region: eastus
    # spec.shoot.secretBindingName is required
    secretBindingName: "hyperscaler secret"
    kubernetes:
      # spec.shoot.kubernetes.version is optional, when not provided default will be used
      version: "1.28.7"
      kubeAPIServer:
        # spec.shoot.kubernetes.kubeAPIServer.oidcConfig is required
        oidcConfig:
          clientID: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
          groupsClaim: groups
          issuerURL: https://my.cool.tokens.com
          signingAlgs:
            - RS256
          usernameClaim: sub
        # spec.shoot.kubernetes.kubeAPIServer.additionalOidcConfig is optional, not implemented in the first KIM release
        additionalOidcConfig:
          - clientID: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
            groupsClaim: groups
            issuerURL: https://some.others.tokens.com
            signingAlgs:
              - RS256
            usernameClaim: sub
            usernamePrefix: 'someother'
    # spec.shoot.provider is required
    provider:
      # spec.shoot.provider.type is required
      type: azure
      # spec.shoot.provider.controlPlaneConfig is required
      controlPlaneConfig:
        apiVersion: azure.provider.extensions.gardener.cloud/v1alpha1
        kind: ControlPlaneConfig
      # spec.shoot.provider.infrastructureConfig is required
      infrastructureConfig:
        apiVersion: azure.provider.extensions.gardener.cloud/v1alpha1
        kind: InfrastructureConfig
        networks:
          vnet:
            cidr: 10.250.0.0/19
          zones:
            - cidr: 10.250.0.0/24
              name: 1
              natGateway:
                enabled: true
                idleConnectionTimeoutMinutes: 4
            - cidr: 10.250.1.0/24
              name: 2
              natGateway:
                enabled: true
                idleConnectionTimeoutMinutes: 4
    # spec.shoot.Networking is required
    networking:
      pods: 10.96.0.0/13
      nodes: 10.250.0.0/22
      services: 10.104.0.0/13
    # spec.shoot.controlPlane is required
    controlPlane:
      highAvailability:
        failureTolerance:
          type: zone
    workers:
      - machine:
          # spec.shoot.workers.machine.type provided is required
          type: Standard_D2s_v5
          # spec.shoot.workers.machine.image is optional, when not provider default will be used
          # Will be modified by the SRE
          image:
            name: gardenlinux
            version: 1312.3.0
        # spec.shoot.workers.volume is required for the first release
        # Probably can be moved into KIM, as it is hardcoded in KEB, and not dependent on plan
        volume:
          type: Standard_LRS
          size: 50Gi
        # spec.shoot.workers.zones is required
        zones:
          - eastus1
          - eastus2
          - eastus3
        # spec.shoot.workers.name is optional, if not provided default will be used
        name: cpu-worker-0
        # spec.shoot.workers.minimum is required
        minimum: 3
        # spec.shoot.workers.maximum is required
        maximum: 20
        # spec.shoot.workers.maxSurge is required in the first release.
        # It can be optional in the future, as it equals to zone count
        maxSurge: 3
        # spec.shoot.workers.maxUnavailable is required in the first release.
        # It can be optional in the future, as it is always set to 0
        maxUnavailable:  0
  security:
    networking:
      filter:
        # spec.security.networking.filter.egress.enabled is required
        egress:
          enabled: false
        # spec.security.networking.filter.ingress.enabled is optional (default=false)
        ingress:
          enabled: true
    # spec.security.administrators is required
    administrators:
      - admin@myorg.com